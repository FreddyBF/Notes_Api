openapi: 3.0.3
info:
  title: Notes API
  version: 1.0.0
  description: >
    API RESTful para gerenciamento seguro de anotações pessoais.
    Permite que utilizadores registrem, organizem e manipulem suas notas com autenticação via JWT.
    Inclui operações completas de CRUD e respostas padronizadas.
  contact:
    name: Alfredo Baptista
    email: alfredobaptista81@gmail.com
    url: https://github.com/FreddyBF

tags:
  - name: Auth
    description: Endpoints relacionados à autenticação de utilizadores
  - name: Notes
    description: Endpoints para operações de CRUD sobre notas

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        statusCode:
          type: integer
          example: 200
        message:
          type: string
          example: Operação realizada com sucesso
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: Bad Request
        statusCode:
          type: integer
          example: 400
        message:
          type: string
          example: Campo obrigatório ausente
        errorCode:
          type: string
          example: INVALID_CREDENTIALS
        path:
          type: string
          example: /notes

    AuthRegisterRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: João da Silva
        email:
          type: string
          example: user@email.com
        password:
          type: string
          example: 123456A

    AuthLoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: user@email.com
        password:
          type: string
          example: 123456A

    AuthResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                accessToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                tokenType:
                  type: string
                  example: Bearer
                expiresIn:
                  type: integer
                  example: 900

    NoteRequest:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
          example: Nota1
        content:
          type: string
          example: Conteudo da Nota1

    NoteResponse:
      allOf:
        - $ref: '#/components/schemas/NoteRequest'
        - type: object
          properties:
            id:
              type: integer
              example: 1
            
security:
  - bearerAuth: []

paths:
  /api/v1/auth/register:
    post:
      tags:
        - Auth
      summary: Registrar novo utilizador
      description: Cria uma nova conta de utilizador com nome, email e senha.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRegisterRequest'
      responses:
        '201':
          description: Registro bem-sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/login:
    post:
      tags:
        - Auth
      summary: Autenticar utilizador
      description: Realiza login e retorna token JWT para autenticação.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginRequest'
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/notes:
    get:
      tags:
        - Notes
      summary: Lista todas as notas do utilizador autenticado
      description: Retorna todas as anotações pertencentes ao utilizador logado.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de notas
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/NoteResponse'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Notes
      summary: Criar nova nota
      description: Cria uma nova anotação vinculada ao utilizador autenticado.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
      responses:
        '201':
          description: Nota criada com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/NoteResponse'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/notes/{id}:
    get:
      tags:
        - Notes
      summary: Obter nota por ID
      description: Retorna os dados de uma nota específica.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da nota
      responses:
        '200':
          description: Nota encontrada
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Nota não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Notes
      summary: Atualizar nota existente
      description: Atualiza os dados de uma nota específica.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da nota
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
      responses:
        '200':
          description: Nota actualizada com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/NoteResponse'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Nota não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Notes
      summary: Remover nota
      description: Exclui uma nota específica do utilizador autenticado.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da nota
      responses:
        '200':
          description: Nota removida com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
                statusCode: 200
                message: Nota removida com sucesso
                data: null
        '404':
          description: Nota não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                success: false
                statusCode: 404
                error: Not Found
                message: Nota não encontrada
                path: /api/v1/notes/99
